version: "3.5"

services:
  devpi:
    container_name: "edx.vn.devpi"
    hostname: devpi.devstack.edx
    image: edxops/devpi:lilac.master
    ports:
      - "3141:3141"
    # volumes:
    #   - devpi_data:/data
    networks:
      default:
        aliases:
          - edx.devstack.devpi

  elasticsearch:
    container_name: "edx.vn.elasticsearch"
    hostname: elasticsearch.devstack.edx
    image: edxops/elasticsearch:devstack
    # TODO: What to do about these forwarded ports? They'll conflict with ports forwarded by the Vagrant VM.
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
      - ./data/elasticsearch/logs:/usr/share/elasticsearch/logs
    networks:
      default:
        aliases:
          - edx.devstack.elasticsearch

  # This is meant to be used to test ES upgrades so that we do not have to upgrade all of our services to ES5 at once.
  elasticsearch7:
    container_name: "edx.vn.elasticsearch7"
    hostname: elasticsearch7.devstack.edx
    image: elasticsearch:7.8.1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./data/elasticsearch7/data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      default:
        aliases:
          - edx.devstack.elasticsearch7

  memcached:
    container_name: "edx.vn.memcached"
    hostname: memcached.devstack.edx
    image: memcached:1.5.10-alpine
    # ports:
    #   - "11211:11211"
    networks:
      default:
        aliases:
          - edx.devstack.memcached

  mongo:
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    container_name: "edx.vn.mongo"
    hostname: mongo.devstack.edx
    image: mongo:${MONGO_VERSION:-4.0.22}
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: edxapp
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      default:
        aliases:
          - edx.devstack.mongo
    volumes:
      - ./data/mongo:/data/db

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: "edx.vn.mysql"
    hostname: mysql.devstack.edx
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    # ports:
    #   - "3506:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      default:
        aliases:
          - edx.devstack.mysql

  mysql57:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: "edx.vn.mysql57"
    hostname: mysql57.devstack.edx
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.7
    # ports:
    #   - "3506:3306"
    volumes:
      - ./data/mysql57:/var/lib/mysql
    networks:
      default:
        aliases:
          - edx.devstack.mysql57

  forum:
    command: bash -c 'source /edx/app/forum/ruby_env && source /edx/app/forum/devstack_forum_env && cd /edx/app/forum/cs_comments_service && bundle install && while true; do ruby app.rb -o 0.0.0.0 ; sleep 2; done'
    container_name: "edx.vn.forum"
    hostname: forum.devstack.edx
    depends_on:
      - mongo
      - memcached
      - elasticsearch7
    image: edxops/forum:lilac.master
    stdin_open: true
    tty: true
    ports:
      - "44567:4567"

  lms:
    build:
      context: ./edxapp
      target: lms
    image: "${EDXAPP_IMAGE_NAME:-edxapp}:${EDXAPP_IMAGE_TAG:-lilac}"
    hostname: lms.devstack.edx
    stdin_open: true
    tty: true
    depends_on:
      - devpi
      - mysql57
      - memcached
      - mongo
      - discovery
      - forum
      - elasticsearch7
    ports:
      - "8072:8000"
    networks:
      default:
        aliases:
          - edx.devstack.lms
          - lms.devstack.edx

  lms-dev:
    build:
      context: ./edxapp
      target: lms-dev
    command: python /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:8000 --settings devstack_docker
    container_name: "edx.vn.lms"
    hostname: lms.devstack.edx
    depends_on:
      - devpi
      - mysql57
      - memcached
      - mongo
      - discovery
      - forum
      - elasticsearch7
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.lms
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    # volumes:
    #   - ./edxapp/edx-platform:/edx/app/edxapp/edx-platform
    ports:
      - "8072:8000"
    networks:
      default:
        aliases:
          - edx.devstack.lms
          - lms.devstack.edx

  cms:
    build:
      context: ./edxapp
      target: studio
    image: "${EDXAPP_IMAGE_NAME:-edxapp}:${EDXAPP_IMAGE_TAG:-lilac}"
    hostname: studio.devstack.edx
    stdin_open: true
    tty: true
    depends_on:
      - devpi
      - mysql57
      - memcached
      - mongo
      - discovery
      - forum
      - elasticsearch7
    ports:
      - "8082:8000"
    networks:
      default:
        aliases:
          - edx.devstack.lms
          - lms.devstack.edx

  cms-dev:
    build:
      context: ./edxapp
      target: studio-dev
    command: python /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:8000 --settings devstack_docker
    container_name: "edx.vn.cms"
    hostname: studio.devstack.edx
    depends_on:
      - devpi
      - mysql57
      - memcached
      - mongo
      - discovery
      - forum
      - elasticsearch7
      - lms-dev
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.studio
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    # volumes:
    #   - ./edxapp/edx-platform:/edx/app/edxapp/edx-platform
    ports:
      - "8082:8000"
    networks:
      default:
        aliases:
          - edx.devstack.studio
          - studio.devstack.edx

  discovery:
    command: bash -c 'source /edx/app/discovery/discovery_env && while true; do python /edx/app/discovery/discovery/manage.py runserver 0.0.0.0:18381; sleep 2; done'
    container_name: "edx.vn.discovery"
    hostname: discovery.devstack.edx
    depends_on:
      - mysql57
      - elasticsearch7
      - memcached
    # Allows attachment to the discovery service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      # This next DB_MIGRATION_HOST line can be removed once edx/configuration has been updated with this value for
      # a while and most people have had a chance to do a "make pull" to get the latest images.
      DB_MIGRATION_HOST: edx.devstack.mysql57
      TEST_ELASTICSEARCH_URL: "edx.devstack.elasticsearch7"
      ENABLE_DJANGO_TOOLBAR: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    image: edxops/discovery:lilac.master
    ports:
      - "18381:18381"
    volumes:
      - ./data/discovery:/edx/var/discovery/

  nginx:
    build:
      context: ./edxapp
      target: nginx
    image: "${EDXAPP_NGINX_IMAGE_NAME:-edxapp-nginx}:${EDXAPP_IMAGE_TAG:-lilac}"
    ports:
      - "8073:8073"
      - "8083:8083"
      - "8093:8093"
    networks:
      default:
        aliases:
          - nginx
    volumes:
      - ./edxapp/nginx/${NGINX_CONF:-conf.d}:/etc/nginx/conf.d:ro
      - ./data/media:/data/media:ro
    depends_on:
      - lms
      - cms
      # - vlu

  phpmyadmin:
    image: phpmyadmin
    ports:
      - 9100:80
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=edx.devstack.mysql57
    depends_on:
      - mysql57

  dockerize:
    image: jwilder/dockerize

networks:
  outside:
    driver: bridge
    name: ${EDX_NETWORK:-edx_outside}
